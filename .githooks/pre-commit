#!/bin/sh
# script for finding and fixing trailing
# whietspace errors. By pass it with --no-verify
# to git commit
#
# usage: make a soft link to this file, e.g., ln -s ~/config/pre-commit.git.sh ~/project_name/.git/hooks/pre-commit
# detect platform
platform="win"
uname_result=`uname`
if [ "$uname_result" = "Linux" ]; then
  platform="linux"
elif [ "$uname_result" = "Darwin" ]; then
  platform="mac"
fi
# change IFS to ignore filename's space in |for|
IFS=""
# autoremove trailing whitespace
for line in `git diff --check --cached | sed '/^[+-]/d'` ; do
  # get file name
  if [ "$platform" = "mac" ]; then
    file="`echo $line | sed -E 's/:[0-9]+: .*//'`"
  else
    file="`echo $line | sed -r 's/:[0-9]+: .*//'`"
  fi
  # display tips
  echo -e "auto removing trailing whitespace in \033[31m$file\033[0m!"
  # since $file in working directory isn't always equal to $file in index, so we backup it
  mv -f "$file" "${file}.save"
  # discard changes in working directory
  git checkout -- "$file"
  # remove trailing whitespace
  if [ "$platform" = "win" ]; then
    # in windows, `sed -i` adds ready-only attribute to $file(I don't know why), so we use temp file instead
    sed 's/[[:space:]]*$//' "$file" > "${file}.bak"
    mv -f "${file}.bak" "$file"
  elif [ "$platform" == "mac" ]; then
    sed -i "" 's/[[:space:]]*$//' "$file"
  else
    sed -i 's/[[:space:]]*$//' "$file"
  fi
  git add "$file"
  # restore the $file
  sed 's/[[:space:]]*$//' "${file}.save" > "$file"
  rm "${file}.save"
done
# check for the existence of pdb usage and print statements
alias pythonfiles='find . -type f -name "*.py" | xargs git diff --cached --name-only $against'
if [ -n "$(pythonfiles)" ]; then
  if pythonfiles | xargs grep --color --with-filename -n "import pdb"; then
    echo "Error commiting changes: Please remove pdb and its usage"
    exit 1
  fi
  if pythonfiles | xargs grep --color --with-filename -n "pdb.set_trace()"; then
    echo "Error commiting changes: Please remove pdb and its usage"
    exit 1
  fi
  if pythonfiles | xargs grep --color --with-filename -n "print"; then
    echo "Error commiting changes: Please remove all print statements!"
    exit 1
  fi
fi